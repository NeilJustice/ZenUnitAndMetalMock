cmake_minimum_required(VERSION 3.2)
project(MetalMockTests)
include(${CMAKE_SOURCE_DIR}/CMakeMacros.cmake)

set(CMAKE_INCLUDE_CURRENT_DIR ON)
include_directories(${CMAKE_SOURCE_DIR})
include_directories(${ZenUnitIncludeDirectory})
if(EXISTS ${GoogleBenchmarkIncludeDirectory})
   include_directories(${GoogleBenchmarkIncludeDirectory})
endif()

folder_source_group(0Args)
folder_source_group_subfolder(0Args MetalMock)
folder_source_group(1Arg)
folder_source_group_subfolder(1Arg MetalMock)
folder_source_group(2Args)
folder_source_group_subfolder(2Args MetalMock)
folder_source_group(3Args)
folder_source_group_subfolder(3Args MetalMock)
folder_source_group(4Args)
folder_source_group_subfolder(4Args MetalMock)
folder_source_group(5Args)
folder_source_group_subfolder(5Args MetalMock)
folder_source_group(6Args)
folder_source_group_subfolder(6Args MetalMock)
folder_source_group(7Args)
folder_source_group_subfolder(7Args MetalMock)
folder_source_group(Exceptions)
folder_source_group(Mock)
folder_source_group(MetalMockers)
folder_source_group(Testing)
folder_source_group(MetalMock)
folder_source_group(MetalMockers)

source_group("" FILES MetalMockTestMain.cpp pch.h pch.cpp)
file(GLOB_RECURSE sourceFilePaths *.h *.cpp)

add_executable(MetalMockTests ${sourceFilePaths})

target_link_libraries(MetalMockTests ZenUnitTestUtils)

if(UNIX AND NOT APPLE)
   target_link_libraries(MetalMockTests stdc++fs)
endif()

if(EXISTS ${GoogleBenchmarkLibraryPath})
   target_link_libraries(MetalMockTests ${GoogleBenchmarkLibraryPath})
endif()
if(WIN32)
   target_link_libraries(MetalMockTests shlwapi)
endif()

IfMSVCEnablePrecompiledHeaders()
IfMSVCAddPostBuildStepToRunTestsRandomly()

if(UNIX AND NOT APPLE)
   if(LCovCodeCoverageMode)
     target_link_libraries(MetalMockTests CodeCovLibraryInterface)
   endif()
endif()
